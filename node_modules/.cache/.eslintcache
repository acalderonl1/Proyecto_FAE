[{"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\index.js":"1","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\App.js":"2","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\login.jsx":"3","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\editar.jsx":"4","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\dashboardAdmin.jsx":"5","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\Pagination.js":"6","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\services\\apirest.js":"7","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\assets\\nav\\navAdmin.js":"8","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\assets\\nav\\navCliente.js":"9","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\crearMenu.jsx":"10","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\listareserva.js":"11","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\listaReserva.js":"12"},{"size":233,"mtime":1644989448360,"results":"13","hashOfConfig":"14"},{"size":1165,"mtime":1645289154620,"results":"15","hashOfConfig":"14"},{"size":4997,"mtime":1645219701109,"results":"16","hashOfConfig":"14"},{"size":225,"mtime":1643411046571,"results":"17","hashOfConfig":"14"},{"size":11558,"mtime":1645206657680,"results":"18","hashOfConfig":"14"},{"size":699,"mtime":1645286110586,"results":"19","hashOfConfig":"14"},{"size":46,"mtime":1644002301415,"results":"20","hashOfConfig":"14"},{"size":1129,"mtime":1645209233548,"results":"21","hashOfConfig":"14"},{"size":1285,"mtime":1645286905158,"results":"22","hashOfConfig":"14"},{"size":2636,"mtime":1645286859903,"results":"23","hashOfConfig":"14"},{"size":15280,"mtime":1645289453036,"results":"24","hashOfConfig":"14"},{"size":15280,"mtime":1645289453036,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"tpqas3",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":8,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"29"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":6,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\index.js",[],[],["68","69"],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\App.js",[],[],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\login.jsx",["70"],[],"import React from \"react\";\r\n//import css\r\nimport '../assets/css/login.css';\r\n//import imagenes\r\nimport logo from '../assets/img/logo.png';\r\n//SERVICIOS\r\nimport { Apiurl } from '../services/apirest';\r\n//Librerias\r\nimport axios from 'axios';\r\n//cookies\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\nclass login extends React.Component {\r\n\r\n    // MANEJO DE ENRUTAMIENTO\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    //AQUI SE CREAN LAS VARIABLES ESTATICAS QUE REQUIERE LA API\r\n    state = {\r\n        form: {\r\n            \"username\": \"\",\r\n            \"password\": \"\",\r\n        },\r\n        error: false,\r\n        errorMsg: \"\"\r\n    }\r\n\r\n\r\n    manejadorSubmit = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    manejadorChange = async e => {\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    manejadorBoton = async () => {\r\n        let username = this.state.form.username\r\n        let password = this.state.form.password\r\n\r\n        let url = Apiurl + `/usuario/login/${username}/${password}`;\r\n        await axios.get(url, this.state.form)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                if (response.data.msg === \"1\" && response.data.id_rol === 1 && response.data.length > 0) {\r\n                    var respuesta = response.data[0];\r\n                    cookies.set('id_rol', respuesta.id_rol, { path: '/' })\r\n                    this.props.history.push(\"/dashboardAdmin\")\r\n\r\n                }\r\n                if (response.data.msg === \"1\" && response.data.id_rol === 2) {\r\n                    this.props.history.push(\"/dashboardClient\")\r\n                } else {\r\n                    this.setState({\r\n                        error: true,\r\n                        errorMsg: response.data.msg\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    error: true,\r\n                    errorMessage: \"error al conectar a la api\"\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"bodylogin\">\r\n                    <div className=\"container wrapper\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-11 mt-60 mx-md-auto\">\r\n                                <div className=\"login-box bg-white pl-lg-5 pl-0\">\r\n                                    <div className=\"row no-gutters align-items-center\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-wrap bg-white\">\r\n                                                <form onSubmit={this.manejadorSubmit}>\r\n                                                    <h4 align=\"center\">Rancho Ala 22</h4>\r\n                                                    <input type=\"text\" id=\"username\" className=\"fadeIn second\" name=\"username\" placeholder=\"Usuario\" onChange={this.manejadorChange} />\r\n                                                    <input type=\"password\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Contrase침a\" onChange={this.manejadorChange} />\r\n                                                    <input type=\"submit\" className=\"fadeIn fourth\" value=\"Iniciar Sesi칩n\" onClick={this.manejadorBoton} />\r\n                                                </form>\r\n\r\n\r\n                                                {/* control de error */}\r\n                                                {this.state.error === true &&\r\n                                                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                                                        {this.state.errorMsg}\r\n                                                    </div>\r\n                                                }\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"content text-center\">\r\n                                                <div className=\"border-bottom pb-5 mb-2\">\r\n                                                    <img src={logo} alt=\"\" />\r\n                                                </div>\r\n                                                <small>@Desarrolado por Abd칩n Calder칩n</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default login","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\editar.jsx",[],[],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\dashboardAdmin.jsx",["71","72","73"],[],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Pagination from './Pagination';\r\nimport Card from 'react-bootstrap/Card'\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\r\nimport { Button } from 'react-bootstrap';\r\nimport Navbar from '../assets/nav/navAdmin'\r\nconst url = \"http://localhost:3000/usuario/datareservaweb\";\r\nconst urlPutreserva = \"http://localhost:3000/reserva/update/\";\r\n\r\nclass dashboardAdmin extends Component {\r\n    state = {\r\n        posts: [],\r\n        currentPage: 1,\r\n        postsPerPage: 6,\r\n        form: {\r\n            estado: 'C',\r\n        },\r\n        form2: {\r\n            estado: 'P',\r\n        },\r\n    };\r\n    modalInsertar = () => {\r\n        this.setState({ modalInsertar: !this.state.modalInsertar });\r\n    }\r\n    peticionGet = () => {\r\n        axios.get(url).then(response => {\r\n            this.setState({ posts: response.data });\r\n            console.log(response.data);\r\n        });\r\n\r\n    }\r\n\r\n    peticionPut = (idreserva) => {\r\n        console.log(idreserva);\r\n        console.log(this.state.form);\r\n        axios.put(urlPutreserva + idreserva, this.state.form).then(response => {\r\n            this.peticionGet();\r\n        })\r\n    }\r\n    peticionPutFiar = (idreserva) => {\r\n        console.log(idreserva);\r\n        console.log(this.state.form);\r\n        axios.put(urlPutreserva + idreserva, this.state.form2).then(response => {\r\n            this.peticionGet();\r\n        })\r\n    }\r\n    /*   handleChange = async e => {\r\n           e.persist();\r\n           await this.setState({\r\n               form: {\r\n                   ...this.state.form,\r\n                   [e.target.name]: e.target.value\r\n               }\r\n           });\r\n           console.log(this.state.form);\r\n       }*/\r\n\r\n    componentDidMount() {\r\n        this.peticionGet()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentPage, postsPerPage, posts } = this.state;\r\n\r\n        const indexOfLastPost = currentPage * postsPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n        const paginate = pageNum => this.setState({ currentPage: pageNum });\r\n\r\n        const nextPage = () => this.setState({ currentPage: currentPage + 1 });\r\n\r\n        const prevPage = () => this.setState({ currentPage: currentPage - 1 });\r\n        const { form } = this.state;\r\n        const alertaConfirmacion = (reserva) => {\r\n            swal({\r\n                title: \"Confirmar pago\",\r\n                text: \"Est치s seguro que deseas confirmar pago?\",\r\n                icon: \"warning\",\r\n                buttons: [\"No\", \"Si\"]\r\n            }).then(repuesta => {\r\n                if (repuesta) {\r\n                    swal({\r\n                        text: \"La reserva se a cancelado con exito\",\r\n                        icon: \"success\"\r\n                    });\r\n                    this.peticionPut(reserva)\r\n                    console.log(reserva);\r\n                }\r\n            })\r\n        }\r\n        const alertaFiar = (reserva) => {\r\n            swal({\r\n                title: \"Fiar reserva\",\r\n                text: \"Est치s seguro que deseas fiar?\",\r\n                icon: \"warning\",\r\n                buttons: [\"No\", \"Si\"]\r\n            }).then(repuesta => {\r\n                if (repuesta) {\r\n                    swal({\r\n                        text: \"La reserva se a fiado con exito\",\r\n                        icon: \"success\"\r\n                    });\r\n                    this.peticionPutFiar(reserva)\r\n                    console.log(reserva);\r\n                }\r\n            })\r\n        }\r\n\r\n        const color = '#5DADE2';\r\n        return (\r\n            <><Navbar />\r\n                <div className=\"home\">\r\n                    <Pagination className=\"pagination\" postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} nextPage={nextPage} prevPage={prevPage} />\r\n                    <br /> <br /> <br /> <br /> <br />\r\n                    <br /> <br />\r\n                    <div>\r\n                        <Row xs={1} md={4} className=\"g-4\">\r\n                            {currentPosts.map(reserva => {\r\n                                return (\r\n                                    <Col md={4} className=\"mb-2\">\r\n                                        <Card className=\"carta\" style={{ backgroundColor: color }}>\r\n                                            <Card.Body key={reserva.idreserva}>\r\n                                                <Card.Title className=\"row justify-content-center\" value={reserva.idreserva}>{reserva.idreserva}</Card.Title>\r\n                                                <Card.Text className=\"row justify-content-center\">\r\n                                                    {reserva.personas.map(menudia => {\r\n                                                        return (\r\n                                                            menudia.nombres\r\n                                                        );\r\n                                                    })}\r\n                                                </Card.Text>\r\n                                            </Card.Body>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem>D칤a: {reserva.menudia.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.dia\r\n                                                    );\r\n                                                })} / {reserva.menudia.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.dia_fecha\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                                <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.tiporanchos.map(tiporancho => {\r\n                                                            return (\r\n                                                                tiporancho.nombre\r\n                                                            );\r\n                                                        })\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                                <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.menus.map(menu => {\r\n                                                            return (\r\n                                                                menu.descripcion\r\n                                                            );\r\n                                                        })\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                                <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.comedors.map(comedor => {\r\n                                                            return (\r\n                                                                comedor.nombre\r\n                                                            );\r\n                                                        })\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                            </ListGroup>\r\n\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem>Correo: {reserva.personas.map(persona => {\r\n                                                    return (\r\n                                                        persona.correo\r\n                                                    );\r\n                                                })} </ListGroupItem>\r\n                                                <ListGroupItem>Telefono: {reserva.personas.map(persona => {\r\n                                                    return (\r\n                                                        persona.telefono\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                                <ListGroupItem>DNI: {reserva.personas.map(persona => {\r\n                                                    return (\r\n                                                        persona.dni\r\n                                                    );\r\n                                                })}</ListGroupItem>\r\n                                                <ListGroupItem>Precio: {reserva.menudia.map(menudia_ => {\r\n                                                    return (\r\n                                                        new Intl.NumberFormat(\"en-EN\").format(menudia_.precio)\r\n                                                    );\r\n                                                })} Cantidad: {new Intl.NumberFormat(\"en-EN\").format(reserva.cantidad)}\r\n                                                </ListGroupItem>\r\n                                                <ListGroupItem>Total a pagar: {reserva.menudia.map(menudia_ => {\r\n                                                    return (\r\n                                                        new Intl.NumberFormat(\"en-EN\").format(menudia_.precio * reserva.cantidad)\r\n                                                    );\r\n                                                })} </ListGroupItem>\r\n                                            </ListGroup>\r\n\r\n                                            <Card.Footer>\r\n                                                <small className=\"text-muted\">Estado de reserva: {reserva.estado}</small>\r\n                                            </Card.Footer>\r\n\r\n                                            <Col className=\"button\">\r\n                                                <Card.Body>\r\n                                                    <Button style={{ backgroundColor: '#1E8449' }} onClick={() => alertaConfirmacion(reserva.idreserva)} variant=\"primary\" type=\"submit\">Pagar</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                                    <Button style={{ backgroundColor: '#B03A2E' }} onClick={() => alertaFiar(reserva.idreserva)}>Fiar</Button>&nbsp;\r\n                                                </Card.Body>\r\n                                            </Col>\r\n                                        </Card>\r\n\r\n                                    </Col>\r\n\r\n                                );\r\n\r\n                            })}   <br /><br /><br /> </Row> <br /><br /><br />\r\n\r\n\r\n                    </div>\r\n\r\n                </div></>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default dashboardAdmin;","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\Pagination.js",[],[],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\services\\apirest.js",[],[],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\assets\\nav\\navAdmin.js",["74","75","76"],[],"import React, { Component } from 'react'\r\nimport { Navbar, NavDropdown, Form, FormControl, Button, Nav } from 'react-bootstrap'\r\n\r\n\r\n\r\nexport default class NavbarComp extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant={\"dark\"} expand=\"lg\">\r\n                    <Navbar.Brand href=\"#\">Admin</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"mr-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                        >\r\n                            <Nav.Link href=\"/nuevo\">Home</Nav.Link>\r\n                            <Nav.Link to=\"/#\">Adminstrador</Nav.Link>\r\n                            <Nav.Link to=\"/#\">Contact</Nav.Link>\r\n                            <Button href=\"/#\" >Ingresar</Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\assets\\nav\\navCliente.js",["77","78","79"],[],"import React, { Component } from 'react'\r\nimport { Navbar, NavDropdown, Form, FormControl, Button, Nav } from 'react-bootstrap'\r\n\r\n\r\nexport default class NavbarComp extends Component {\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar bg=\"dark\" variant={\"dark\"} expand=\"lg\">\r\n                    <Navbar.Brand href=\"#\">Cliente</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav\r\n                            className=\"mr-auto my-2 my-lg-0\"\r\n                            style={{ maxHeight: '100px' }}\r\n                            navbarScroll\r\n                        >\r\n                            <Nav.Link href=\"/dashboardClient\">Pricipal</Nav.Link>\r\n                            <Nav.Link href=\"/reservas\">Reservas</Nav.Link>\r\n                            <Nav.Link href=\"/crearMenu\">Crear men칰</Nav.Link>\r\n                            <Nav.Link href=\"/CalendarioMenu\">Calendario de Menus</Nav.Link>\r\n                            <Button className=\"btn btn-secondary\" href=\"/\" >Salir</Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\crearMenu.jsx",[],[],"C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\listareserva.js",["80","81","82","83","84","85","86","87","88"],[],"import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport '../assets/css/App.css';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport Pagination from './Pagination';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ReactExport from \"react-export-excel\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\r\nimport { Button } from 'react-bootstrap';\r\nimport swal from 'sweetalert';\r\nimport '../assets/css/btn_number.css';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst urlPutreserva = \"http://localhost:3000/reserva/update/\";\r\n\r\n\r\nfunction listareserva() {\r\n    const state = {\r\n        form: {\r\n            estado: 'C',\r\n        },\r\n        form2: {\r\n            estado: 'P',\r\n        },\r\n    };\r\n    const [usuarios, setUsuarios] = useState([]);\r\n    const [tablaUsuarios, setTablaUsuarios] = useState([]);\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(6);\r\n\r\n    const peticionGet = async () => {\r\n        await axios.get(\"http://localhost:3000/usuario/datareservaweb\")\r\n            .then(response => {\r\n                setUsuarios(response.data);\r\n                setTablaUsuarios(response.data);\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    const peticionPut = async (idreserva) => {\r\n        console.log(idreserva);\r\n        console.log(state.form);\r\n        await axios.put(urlPutreserva + idreserva, state.form).then(response => {\r\n            peticionGet();\r\n        })\r\n    }\r\n    const peticionPutFiar = async (idreserva) => {\r\n        console.log(idreserva);\r\n        console.log(state.form);\r\n        await axios.put(urlPutreserva + idreserva, state.form2).then(response => {\r\n            peticionGet();\r\n        })\r\n    }\r\n    const handleChange = e => {\r\n        setBusqueda(e.target.value);\r\n        filtrar(e.target.value);\r\n    }\r\n    const filtrar = (terminoBusqueda) => {\r\n        var resultadosBusqueda = tablaUsuarios.filter((elemento) => {\r\n\r\n            if (elemento.idreserva.toString().includes(terminoBusqueda.toLowerCase()) ||\r\n                elemento.estado.toString().toLowerCase().includes(terminoBusqueda.toLowerCase()) ||\r\n                elemento.personas.map((per) => {\r\n                    return (per.nombres)\r\n                }).toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n                ||\r\n                elemento.personas.map((per) => { return (per.dni) }).toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n                ||\r\n\r\n                elemento.menudia.map((menudia1) => { return (menudia1.dia) }).toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n                ||\r\n\r\n                elemento.menudia.map((menudiafecha) => { return (menudiafecha.dia_fecha) }).toString().toLowerCase().includes(terminoBusqueda.toLowerCase())\r\n\r\n            ) {\r\n                return elemento;\r\n            }\r\n        });\r\n        setUsuarios(resultadosBusqueda);\r\n    }\r\n\r\n    useEffect(() => {\r\n        peticionGet();\r\n    }, [])\r\n\r\n    const alertaConfirmacion = (reserva) => {\r\n        swal({\r\n            title: \"Confirmar pago\",\r\n            text: \"Est치s seguro que deseas confirmar pago?\",\r\n            icon: \"warning\",\r\n            buttons: [\"No\", \"Si\"]\r\n        }).then(repuesta => {\r\n            if (repuesta) {\r\n                swal({\r\n                    text: \"La reserva se a cancelado con exito\",\r\n                    icon: \"success\"\r\n                });\r\n                peticionPut(reserva)\r\n                console.log(reserva);\r\n            }\r\n        })\r\n    }\r\n    const alertaFiar = (reserva) => {\r\n        swal({\r\n            title: \"Fiar reserva\",\r\n            text: \"Est치s seguro que deseas fiar?\",\r\n            icon: \"warning\",\r\n            buttons: [\"No\", \"Si\"]\r\n        }).then(repuesta => {\r\n            if (repuesta) {\r\n                swal({\r\n                    text: \"La reserva se a fiado con exito\",\r\n                    icon: \"success\"\r\n                });\r\n                peticionPutFiar(reserva)\r\n                console.log(reserva);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const history = useHistory();\r\n\r\n    const handleRoute = () => {\r\n        history.push(\"/ingresodemenud\");\r\n    }\r\n    return (\r\n\r\n        <div className=\"App\">\r\n            <br />\r\n            <Button\r\n                onClick={handleRoute}>\r\n                About\r\n            </Button>\r\n            <div align=\"right\">\r\n\r\n                <ExcelFile element={<div className=\"mb-2\">\r\n                    <Button variant=\"primary\" size=\"lg\" >\r\n                        Descargar Excel\r\n                    </Button>{' '}\r\n\r\n                </div>} filename=\"Excel reservas\">\r\n                    <ExcelSheet data={usuarios} name=\"Reservas comedor\">\r\n                        <ExcelColumn label=\"idreserva\" value=\"idreserva\" />\r\n                        <ExcelColumn label=\"Estado\" value=\"estado\" />\r\n                        <ExcelColumn label=\"Nombre persona\" value={(person) => person.personas.map((per) => per.nombres).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"Correo\" value={(person) => person.personas.map((per) => per.correo).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"Telefono\" value={(person) => person.personas.map((per) => per.telefono).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"dni\" value={(person) => person.personas.map((per) => per.dni).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"dia\" value={(menud) => menud.menudia.map((menudiadia) => menudiadia.dia).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"fecha\" value={(elemento) => elemento.menudia.map((menudiafecha) => menudiafecha.dia_fecha).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"precio\" value={(menud) => menud.menudia.map((menudiaprecio) => menudiaprecio.precio).toString().toLowerCase()} />\r\n                        <ExcelColumn label=\"cantidad\" value=\"cantidad\" />\r\n                    </ExcelSheet>\r\n\r\n                </ExcelFile>\r\n            </div>\r\n            <p style={{ fontSize: \"25px\" }} >Total reserva</p>\r\n            <div align=\"center\">  <p className='totalreserva' style={{ fontSize: \"50px\", backgroundColor: '#5DADE2' }} >  {usuarios.length}  </p>\r\n            </div>\r\n\r\n\r\n            <br />\r\n            <div className=\"containerInput\" >\r\n                <input\r\n                    className=\"form-control inputBuscar\"\r\n                    value={busqueda}\r\n                    placeholder=\"B칰squeda por idreserva / Nombre / dni / fecha\"\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"btn btn-success\">\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"table-responsive\">\r\n                <Row xs={1} md={4} className=\"g-4\">\r\n                    {usuarios &&\r\n                        usuarios.slice(indexOfFirstPost, indexOfLastPost).map(reserva => {\r\n                            return (\r\n                                <Col md={4} className=\"mb-2\" key={reserva.idreserva}>\r\n                                    <Card className=\"carta\" style={{ backgroundColor: reserva.estado === 'A' ? '#5DADE2' : '#9C2A1F' }}>\r\n                                        <Card.Body key={reserva.idreserva}>\r\n                                            <Card.Title className=\"row justify-content-center\" value=\"reservaid\">{reserva.idreserva}</Card.Title>\r\n                                            <Card.Text style={{ fontSize: \"22px\", textAlign: \"center\", color: \"black\" }}>\r\n                                                {reserva.personas.map(menudia => {\r\n                                                    return (\r\n                                                        menudia.nombres\r\n                                                    )\r\n                                                })}\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                        <ListGroup className=\"list-group-flush\" key=\"lista\">\r\n                                            <ListGroupItem key=\"lista\">D칤a: {reserva.menudia.map(menudia => {\r\n                                                return (\r\n                                                    menudia.dia\r\n                                                )\r\n                                            })} / {reserva.menudia.map(menudia => {\r\n                                                return (\r\n                                                    menudia.dia_fecha\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                            <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                return (\r\n                                                    menudia.tiporanchos.map(tiporancho => {\r\n                                                        return (\r\n                                                            tiporancho.nombre\r\n                                                        )\r\n                                                    })\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                            <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                return (\r\n                                                    menudia.menus.map(menu => {\r\n                                                        return (\r\n                                                            menu.descripcion\r\n                                                        )\r\n                                                    })\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                            <ListGroupItem>{reserva.menudia.map(menudia => {\r\n                                                return (\r\n                                                    menudia.comedors.map(comedor => {\r\n                                                        return (\r\n                                                            comedor.nombre\r\n                                                        )\r\n                                                    })\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                        </ListGroup>\r\n\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroupItem>Correo: {reserva.personas.map(persona => {\r\n                                                return (\r\n                                                    persona.correo\r\n                                                )\r\n                                            })} </ListGroupItem>\r\n                                            <ListGroupItem>Telefono: {reserva.personas.map(persona => {\r\n                                                return (\r\n                                                    persona.telefono\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                            <ListGroupItem>DNI: {reserva.personas.map(persona => {\r\n                                                return (\r\n                                                    persona.dni\r\n                                                )\r\n                                            })}</ListGroupItem>\r\n                                            <ListGroupItem>Precio: {reserva.menudia.map(menudia_ => {\r\n                                                return (\r\n                                                    new Intl.NumberFormat(\"en-EN\").format(menudia_.precio)\r\n                                                )\r\n                                            })} Cantidad: {new Intl.NumberFormat(\"en-EN\").format(reserva.cantidad)}\r\n                                            </ListGroupItem>\r\n                                            <ListGroupItem>Total a pagar: {reserva.menudia.map(menudia_ => {\r\n                                                return (\r\n                                                    new Intl.NumberFormat(\"en-EN\").format(menudia_.precio * reserva.cantidad)\r\n                                                )\r\n                                            })} </ListGroupItem>\r\n                                        </ListGroup>\r\n\r\n                                        <Card.Footer className=\"row justify-content-center\" value=\"reservaid\">\r\n\r\n                                            <ListGroupItem>\r\n                                                <p style={{ fontSize: \"22px\", textAlign: \"center\", color: \"black\" }}>{reserva.estado === 'A' ? 'Activa' : 'Pendiente de pago'}</p>\r\n                                            </ListGroupItem>\r\n\r\n                                        </Card.Footer>\r\n\r\n\r\n                                        {reserva.estado === 'A' ?\r\n                                            <Col className=\"button\" >\r\n                                                <Card.Body  >\r\n                                                    <Button style={{ backgroundColor: '#1E8449' }} onClick={() => alertaConfirmacion(reserva.idreserva)} variant=\"primary\" type=\"submit\">Pagar</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                                                    <Button style={{ backgroundColor: '#B03A2E' }} onClick={() => alertaFiar(reserva.idreserva)}  >Fiar</Button>&nbsp;\r\n                                                </Card.Body>\r\n                                            </Col>\r\n                                            : <>     <Button style={{ backgroundColor: '#1E8449' }} onClick={() => alertaConfirmacion(reserva.idreserva)} variant=\"primary\" type=\"submit\">Pagar</Button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            </>\r\n                                        }\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )\r\n\r\n                        })}   <br /><br /><br /> </Row> <br /><br /><br />\r\n\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={usuarios.length}\r\n                    paginate={paginate}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default listareserva;","C:\\PROYECTOS_INDEPENDIENTES\\Proyecto_FAE\\src\\components\\listaReserva.js",["89","90","91","92","93","94","95"],[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":5,"nodeType":"102","messageId":"103","endLine":21,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":2,"column":28,"nodeType":"106","messageId":"107","endLine":2,"endColumn":36},{"ruleId":"104","severity":1,"message":"108","line":2,"column":38,"nodeType":"106","messageId":"107","endLine":2,"endColumn":47},{"ruleId":"104","severity":1,"message":"109","line":81,"column":17,"nodeType":"106","messageId":"107","endLine":81,"endColumn":21},{"ruleId":"104","severity":1,"message":"110","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":29},{"ruleId":"104","severity":1,"message":"111","line":2,"column":31,"nodeType":"106","messageId":"107","endLine":2,"endColumn":35},{"ruleId":"104","severity":1,"message":"112","line":2,"column":37,"nodeType":"106","messageId":"107","endLine":2,"endColumn":48},{"ruleId":"104","severity":1,"message":"110","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":29},{"ruleId":"104","severity":1,"message":"111","line":2,"column":31,"nodeType":"106","messageId":"107","endLine":2,"endColumn":35},{"ruleId":"104","severity":1,"message":"112","line":2,"column":37,"nodeType":"106","messageId":"107","endLine":2,"endColumn":48},{"ruleId":"113","severity":2,"message":"114","line":33,"column":37,"nodeType":"106","endLine":33,"endColumn":45},{"ruleId":"113","severity":2,"message":"114","line":34,"column":47,"nodeType":"106","endLine":34,"endColumn":55},{"ruleId":"113","severity":2,"message":"114","line":35,"column":37,"nodeType":"106","endLine":35,"endColumn":45},{"ruleId":"113","severity":2,"message":"114","line":36,"column":43,"nodeType":"106","endLine":36,"endColumn":51},{"ruleId":"113","severity":2,"message":"114","line":37,"column":28,"nodeType":"106","endLine":37,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":69,"column":66,"nodeType":"117","messageId":"118","endLine":69,"endColumn":68},{"ruleId":"113","severity":2,"message":"119","line":92,"column":5,"nodeType":"106","endLine":92,"endColumn":14},{"ruleId":"113","severity":2,"message":"120","line":139,"column":21,"nodeType":"106","endLine":139,"endColumn":31},{"ruleId":"121","severity":2,"message":"122","line":139,"column":21,"nodeType":"106","messageId":"123","endLine":139,"endColumn":31},{"ruleId":"113","severity":2,"message":"114","line":35,"column":37,"nodeType":"106","endLine":35,"endColumn":45},{"ruleId":"113","severity":2,"message":"114","line":36,"column":47,"nodeType":"106","endLine":36,"endColumn":55},{"ruleId":"113","severity":2,"message":"114","line":37,"column":37,"nodeType":"106","endLine":37,"endColumn":45},{"ruleId":"113","severity":2,"message":"114","line":38,"column":43,"nodeType":"106","endLine":38,"endColumn":51},{"ruleId":"113","severity":2,"message":"114","line":39,"column":28,"nodeType":"106","endLine":39,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":71,"column":66,"nodeType":"117","messageId":"118","endLine":71,"endColumn":68},{"ruleId":"113","severity":2,"message":"119","line":94,"column":5,"nodeType":"106","endLine":94,"endColumn":14},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'form' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"listareserva\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook \"useEffect\" is called in function \"listareserva\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useHistory\" is called in function \"listareserva\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","no-undef","'useHistory' is not defined.","undef","no-global-assign","no-unsafe-negation"]